ALTER session SET current_schema=JDGWORKFLOWAPP;

CREATE SEQUENCE JDGWORKFLOWAPP.attributes_task_seq
 INCREMENT BY 1
 START WITH 1
 NOMAXVALUE
 MINVALUE 1
 NOCACHE;

 GRANT SELECT ON JDGWORKFLOWAPP.attributes_task_seq TO JDGWORKFLOW_USER;

 CREATE OR REPLACE SYNONYM JDGWORKFLOW_USER.attributes_task_seq FOR JDGWORKFLOWAPP.attributes_task_seq;

/
 
CREATE TABLE JDGWORKFLOWAPP.ATTRIBUTES_TASK(
  ID Integer NOT NULL,
  TASK_INSTANCE_ID Varchar2(64 ) NOT NULL,
  PROCESS_CONTEXT_ID Integer NOT NULL,
  TOPICAL_AREAS_REMAINING Clob,
  TOPICAL_AREA_HN_COUNTS Varchar2(4000 ),
  TOPICAL_AREAS_AI Clob,
  IS_ORPHAN Char(1 )
)
PARTITION BY HASH (PROCESS_CONTEXT_ID)
PARTITIONS 4
TABLESPACE JDGWORKFLOWAPP_DATA;
-- Add keys for table JDGWORKFLOWAPP.ATTRIBUTES_TASK
ALTER TABLE JDGWORKFLOWAPP.ATTRIBUTES_TASK ADD CONSTRAINT pk_ATTRIBUTES_TASK PRIMARY KEY (ID);

/

 GRANT SELECT, INSERT, UPDATE, DELETE ON JDGWORKFLOWAPP.ATTRIBUTES_TASK TO JDGWORKFLOW_USER;
 
 CREATE OR REPLACE SYNONYM JDGWORKFLOW_USER.ATTRIBUTES_TASK FOR JDGWORKFLOWAPP.ATTRIBUTES_TASK;
 
 /

-- Trigger for sequence JDGWORKFLOWAPP.ATTRIBUTES_task_seq for column ID in table JDGWORKFLOWAPP.ATTRIBUTES_TASK ---------
CREATE OR REPLACE TRIGGER JDGWORKFLOWAPP.ts_ATTRIBUTES_TASK_atts_seq BEFORE INSERT
ON JDGWORKFLOWAPP.ATTRIBUTES_TASK FOR EACH ROW
WHEN (new.ID IS NULL)
BEGIN
    :new.ID := JDGWORKFLOWAPP.attributes_task_seq.nextval;
END;

/

CREATE OR REPLACE TRIGGER JDGWORKFLOWAPP.tsu_ATTRIBUTES_TASK_atts_seq AFTER UPDATE OF ID
ON JDGWORKFLOWAPP.ATTRIBUTES_TASK FOR EACH ROW
BEGIN
    RAISE_APPLICATION_ERROR(-20010,'Cannot update column ID in table JDGWORKFLOWAPP.ATTRIBUTES_TASK as it uses sequence.');
END;

/

CREATE INDEX JDGWORKFLOWAPP.IX_FK_ATTRIBUTES_TASK ON JDGWORKFLOWAPP.ATTRIBUTES_TASK (TASK_INSTANCE_ID) ;
ALTER TABLE JDGWORKFLOWAPP.ATTRIBUTES_TASK ADD CONSTRAINT FK_ATTRIBUTES_TASK FOREIGN KEY (TASK_INSTANCE_ID) REFERENCES JDGWORKFLOWAPP.TASK (TASK_INSTANCE_ID);

/
--Changes for B-58118
ALTER TABLE JDGWORKFLOWAPP.JUDICIAL_ARTIFACT
ADD
(CONFIDENCE_FACTOR_RETRO VARCHAR2(30),
PB_RETRO_DT_MMR VARCHAR2(255)
);

--indices for new columns
CREATE INDEX JDGWORKFLOWAPP.IDX_CONFIDENCE_FACTOR_RETRO ON JDGWORKFLOWAPP.JUDICIAL_ARTIFACT (CONFIDENCE_FACTOR_RETRO)
TABLESPACE JDGWORKFLOWAPP_IDX;

CREATE INDEX JDGWORKFLOWAPP.IDX_PB_RETRO_DT_MMR ON JDGWORKFLOWAPP.JUDICIAL_ARTIFACT (PB_RETRO_DT_MMR)
TABLESPACE JDGWORKFLOWAPP_IDX;

ALTER TABLE JDGWORKFLOWAPP.SOURCE_ARTIFACT ADD WL_LINK varchar2(150);

ALTER TABLE JDGWORKFLOWAPP.ATTRIBUTES_TASK ADD(SENT_TO_ATTRIBUTE_REVIEW_BY clob);




CREATE SEQUENCE JDGWORKFLOWAPP.att_suggestion_task_seq
 INCREMENT BY 1
 START WITH 1
 NOMAXVALUE
 MINVALUE 1
 NOCACHE;

 GRANT SELECT ON JDGWORKFLOWAPP.att_suggestion_task_seq TO JDGWORKFLOW_USER;

 CREATE OR REPLACE SYNONYM JDGWORKFLOW_USER.att_suggestion_task_seq FOR JDGWORKFLOWAPP.att_suggestion_task_seq;

/
 
CREATE TABLE JDGWORKFLOWAPP.ATT_SUGGESTION_TASK(
  ID Integer NOT NULL,
  TASK_INSTANCE_ID Varchar2(64 ) NOT NULL,
  PROCESS_CONTEXT_ID Integer NOT NULL,
  SUGGESTION_TERM Varchar2(200 ),
  SUGGESTION_COMMENT Varchar2(200 ),
  SUGGESTED_BY Varchar2(30 ),
  SUGGESTION_ID Varchar2(34 ),
  ATTRIBUTE_NAME Varchar2(50 ),
  ACTIVE_STATUS Varchar2(10 ),
  REFRESH_DATE Timestamp(6),
  CREATED_DATE Timestamp(6),
  MODIFIED_DATE Timestamp(6),
  VERSION Integer
)
PARTITION BY HASH (PROCESS_CONTEXT_ID)
PARTITIONS 4
TABLESPACE JDGWORKFLOWAPP_DATA;
-- Add keys for table JDGWORKFLOWAPP.ATT_SUGGESTION_TASK
ALTER TABLE JDGWORKFLOWAPP.ATT_SUGGESTION_TASK ADD CONSTRAINT pk_ATT_SUGGESTION_TASK PRIMARY KEY (ID);

/

 GRANT SELECT, INSERT, UPDATE, DELETE ON JDGWORKFLOWAPP.ATT_SUGGESTION_TASK TO JDGWORKFLOW_USER;
 
 CREATE OR REPLACE SYNONYM JDGWORKFLOW_USER.ATT_SUGGESTION_TASK FOR JDGWORKFLOWAPP.ATT_SUGGESTION_TASK;
 
 /

-- Trigger for sequence JDGWORKFLOWAPP.ATT_SUGGESTION_TASK_seq for column ID in table JDGWORKFLOWAPP.ATT_SUGGESTION_TASK ---------
CREATE OR REPLACE TRIGGER JDGWORKFLOWAPP.ts_ATT_SUGGESTION_TASK_seq BEFORE INSERT
ON JDGWORKFLOWAPP.ATT_SUGGESTION_TASK FOR EACH ROW
WHEN (new.ID IS NULL)
BEGIN
    :new.ID := JDGWORKFLOWAPP.att_suggestion_task_seq.nextval;
END;

/

CREATE OR REPLACE TRIGGER JDGWORKFLOWAPP.tsu_ATT_SUGGESTION_TASK_seq AFTER UPDATE OF ID
ON JDGWORKFLOWAPP.ATT_SUGGESTION_TASK FOR EACH ROW
BEGIN
    RAISE_APPLICATION_ERROR(-20010,'Cannot update column ID in table JDGWORKFLOWAPP.ATT_SUGGESTION_TASK as it uses sequence.');
END;

/

CREATE INDEX JDGWORKFLOWAPP.IX_FK_ATT_SUGGESTION_TASK ON JDGWORKFLOWAPP.ATT_SUGGESTION_TASK (TASK_INSTANCE_ID) ;
CREATE INDEX JDGWORKFLOWAPP.IX_ATT_ATT_SUGGESTION_TASK ON JDGWORKFLOWAPP.ATT_SUGGESTION_TASK (ATTRIBUTE_NAME) ;
CREATE INDEX JDGWORKFLOWAPP.IX_STAT_ATT_SUGGESTION_TASK ON JDGWORKFLOWAPP.ATT_SUGGESTION_TASK (ACTIVE_STATUS) ;

ALTER TABLE JDGWORKFLOWAPP.ATT_SUGGESTION_TASK ADD CONSTRAINT FK_ATT_SUGGESTION_TASK FOREIGN KEY (TASK_INSTANCE_ID) REFERENCES JDGWORKFLOWAPP.TASK (TASK_INSTANCE_ID);

/

 
commit;

